name: build
on: [push]

jobs:
  job:
    name: ${{ matrix.os }}-mcpp-build
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-latest, macos-latest]
        include:
          - os: ubuntu-latest
            triplet: x64-linux
          - os: macos-latest
            triplet: x64-osx

    steps:
      - uses: actions/checkout@v1
        with:
          submodules: true

      - uses: lukka/get-cmake@v3.17.1
        name: Install cmake

      - name: Set vcpkg's response file path used as part of cache's key.
        uses: lukka/set-shell-env@master
        with:
          VCPKGRESPONSEFILE: ${{ github.workspace }}/cmake/vcpkg_${{ matrix.triplet }}.txt

      - name: (macOS) Install dependencies
        if: runner.os == 'macOS'
        run: |
          brew install hwloc bison flex gdal pkg-config

      - name: (Linux) Install dependencies
          if: runner.os == 'Linux'
          run: |
            sudo apt-get update
            sudo apt-get install libxml2-dev libnuma-dev libhwloc-dev

      - name: (Linux) Install dependencies
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-9 g++-9

      - name: (Linux) Set GCC9 as default compiler
        uses: lukka/set-shell-env@master
        if: runner.os == 'Linux'
        with:
          CMAKE_EXTRA_ARGS: '-DCMAKE_C_COMPILER=/usr/bin/gcc-9 -DCMAKE_CXX_COMPILER=/usr/bin/g++-9'

      - name: Restore artifacts, or run vcpkg, build and cache artifacts
        uses: lukka/run-vcpkg@v3
        id: runvcpkg
        with:
          vcpkgArguments: '@${{ env.VCPKGRESPONSEFILE }}'
          vcpkgDirectory: '${{ github.workspace }}/extern/vcpkg'
          # Ensure the cache key changes any time the content of the response file changes.
          appendedCacheKey: ${{ hashFiles( env.VCPKGRESPONSEFILE ) }}

      - name: Run CMake with Ninja
        uses: lukka/run-cmake@v2
        id: runcmake
        with:
          cmakeListsOrSettingsJson: "CMakeListsTxtAdvanced"
          useVcpkgToolchainFile: true
          buildDirectory: '${{ github.workspace }}/build/'
          cmakeAppendedArgs: '-GNinja -DCI=ON ${{ env.CMAKE_EXTRA_ARGS }}'

      - name: Unit Tests
        run: |
          cd ${{ github.workspace }}/build/
          ctest --output-on-failure ${{ env.CTEST_EXTRA_ARGS }}
